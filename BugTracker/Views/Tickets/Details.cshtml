@model TicketViewModel
<!-- Breadcrumbs-->
<ol class="breadcrumb">
    <li class="breadcrumb-item">
        <a href="@Url.Action("Details", "Tickets")">Ticket Details</a>
    </li>
</ol>

<div class="jumbotron">
    <h1 class="display-4">@Model.Title</h1>
    <p class="lead mt-3">@Model.Description</p>
    <a class="btn btn-primary" href="#content">Comments</a>
    <a class="btn btn-primary" href="#content">Attachments</a>
</div>
<div class="container">
    <div class="card-deck mb-4">
        <div class="card text-center">
            <div class="card-block">
                <h5 class="card-title">
                    Project
                </h5>
                <p class="card-text mt-5">
                    @Model.ProjectName
                </p>
            </div>
        </div>
        <div class="card text-center">
            <div class="card-block">
                <h5 class="card-title">
                    Creater
                </h5>
                <p class="card-text mt-5">
                    @Model.CreatedByName
                </p>
            </div>
        </div>
        <div class="card text-center">
            <div class="card-block">
                <h5 class="card-title">
                    Assignee
                </h5>
                @if (Model.AssignedToName == null)
                {
                    <p class="card-text mt-5">
                        None
                    </p>
                }
                else
                {
                    <p class="card-text mt-5">
                        @Model.AssignedToName
                    </p>
                }
            </div>
        </div>
    </div>
    <div class="card-deck mb-4">
        <div class="card text-center">
            <div class="card-block">
                <h5 class="card-title">
                    Type
                </h5>
                <p class="card-text mt-5">
                    @Model.TypeName
                </p>
            </div>
        </div>
        <div class="card text-center">
            <div class="card-block">
                <h5 class="card-title">
                    Priority
                </h5>
                <p class="card-text mt-5">
                    @Model.PriorityName
                </p>
            </div>
        </div>
        <div class="card text-center">
            <div class="card-block">
                <h5 class="card-title">
                    Status
                </h5>
                <p class="card-text mt-5">
                    @Model.StatusName
                </p>
            </div>
        </div>
    </div>
    <div class="card-deck mb-4">
        <div class="card text-center">
            <div class="card-block">
                <h5 class="card-title">
                    Date Created
                </h5>
                <p class="card-text mt-5">
                    @Model.DateCreated
                </p>
            </div>
        </div>
        <div class="card text-center">
            <div class="card-block">
                <h5 class="card-title">
                    Date Updated
                </h5>
                @if (string.IsNullOrEmpty(Model.DateUpdated.ToString()))
                {
                    <p class="card-text mt-5">
                        Never
                    </p>
                }
                else
                {
                    <p class="card-text mt-5">
                        @Model.DateUpdated
                    </p>
                }
            </div>
        </div>
    </div>
</div>
<hr />
<div class="container mt-5 text-center" id="content">
    <div class="row">
        <div class="col-6">
            <h4 class="">Comments</h4>
            @foreach (var comment in Model.Comments)
            {
                <div class="col-md-7 border border-primary rounded-left rounded-right rounded-lg mb-2 ml-auto mr-auto">
                    @if (!string.IsNullOrEmpty(comment.CreatedBy.UserName))
                    {
                        <pre class="text-muted">By:- @comment.CreatedBy.UserName</pre>
                    }
                    <span class="text-info">
                        [ @comment.Title ]
                    </span>
                    @if (User.IsInRole("Admin") || User.IsInRole("Project Manager"))
                    {
                        <span class="ml-4">
                            @Html.ActionLink("Edit", "EditComment", "Comments", new { commentId = comment.Id }, new { @class = "text-warning" })
                        </span>
                        <span class="ml-4">
                            @Html.ActionLink("Delete ", "DeleteComment", "Comments", new { commentId = comment.Id }, new { @class = "text-danger" })
                        </span>
                    }
                    else if (User.IsInRole("Submitter") || User.IsInRole("Developer"))
                    {
                        if (comment.CreatedBy.Email == User.Identity.Name)
                        {
                            <span class="ml-4">
                                @Html.ActionLink("Edit", "EditComment", "Comments", new { commentId = comment.Id }, new { @class = "text-warning" })
                            </span>
                            <span class="ml-4">
                                @Html.ActionLink("Delete ", "DeleteComment", "Comments", new { commentId = comment.Id }, new { @class = "text-danger" })
                            </span>
                        }
                    }
                </div>
            }
            @Html.Partial("~/Views/Comments/_AddComment.cshtml", new CommentViewModel() { Id = Model.Id })
        </div>
        <div class="col-6">
            <h4 class="text-center">Attachments</h4>
            @foreach (var attachment in Model.Attachments)
            {
                <div class="col-md-7 border border-primary rounded-left rounded-right rounded-lg mb-2  ml-auto mr-auto">
                    @if (!string.IsNullOrEmpty(attachment.CreatedBy.UserName))
                    {
                        <pre class="text-muted">By:- @attachment.CreatedBy.UserName</pre>
                    }
                    <span class="text-info"><a href="@attachment.FileUrl" download="">[ @attachment.FileName ]</a></span>
                    @if (User.IsInRole("Admin") || User.IsInRole("Project Manager"))
                    {
                        <span class="ml-4">
                            @Html.ActionLink("Delete", "DeleteAttachment", "Attachments", new { attachmentId = attachment.Id }, new { @class = "text-danger" })
                        </span>
                    }
                    else if (User.IsInRole("Submitter") || User.IsInRole("Developer"))
                    {
                        if (attachment.CreatedBy.Email == User.Identity.Name)
                        {
                            <span class="ml-4">
                                @Html.ActionLink("Delete ", "DeleteAttachment", "Attachments", new { attachmentId = attachment.Id }, new { @class = "text-danger" })
                            </span>
                        }
                    }
                </div>
            }
            @Html.Partial("~/Views/Attachments/_AddAttachment.cshtml", new AttachmentViewModel() { Id = Model.Id })
        </div>
    </div>
    <div class="row">
        <div class="col-12">
            @foreach (var history in Model.Histories)
            {
                <div class="card mb-3">
                    <div class="card-body">
                        <div class="card-title text-primary">
                            @history.PropertyChanged
                        </div>
                        <div class="card-subtitle text-primary text-muted">
                            @history.ChangingUser.Email
                        </div>
                        <div class="card-text">
                            @history.OldValue changed to @history.NewValue
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>